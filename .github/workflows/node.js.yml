# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: NodeJS CI Job

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Build Express Server Module
      run: |
        npm install
        npm run build --if-present
      working-directory: server
    - name: Build React Module
      run: |
        npm install
        npm run build --if-present
      working-directory: app/listings
#    - run: npm test

    - name: Build & push Server App Image
      id: Build-and-Push-Server-App-Image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: gsdockit/mernapp-server
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        directory: server
    - name: Build & push Frontend App Image
      id: Build-and-Push-Frontend-App-Image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: gsdockit/mernapp-ui
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        directory: server  
    - name: Posting Action Workflow updates to Slack
      uses: act10ns/slack@v1
      with: 
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#github-updates'
      if: always()
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      